/* 
 * Book Service API
 *
 * This api is part of Book Service and handles all CRUD operation on book domain object
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing BookApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BookApiTests : IDisposable
    {
        private BookApi instance;

        public BookApiTests()
        {
            instance = new BookApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BookApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' BookApi
            //Assert.IsType(typeof(BookApi), instance, "instance is a BookApi");
        }

        
        /// <summary>
        /// Test BookGet
        /// </summary>
        [Fact]
        public void BookGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.BookGet();
            //Assert.IsType<List<Book>> (response, "response is List<Book>");
        }
        
        /// <summary>
        /// Test BookPost
        /// </summary>
        [Fact]
        public void BookPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewBook newBook = null;
            //instance.BookPost(newBook);
            
        }
        
    }

}
